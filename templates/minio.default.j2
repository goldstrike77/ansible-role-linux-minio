MINIO_PROMETHEUS_AUTH_TYPE="public"
{% if minio_servers | length > 1 %}
MINIO_VOLUMES='{% for node in minio_servers %}{% for i in range(1,minio_drives+1,1) | list %}https://{{ node }}{{ minio_path }}/minio/T_{{ item }}_d{{ i }} {% endfor %}{% endfor %}'
{% else %}
MINIO_VOLUMES="{{ minio_path }}/minio/T_{{ item }}_{1...{{ minio_drives }}}"
{% endif %}
MINIO_OPTS="--address {{ ansible_default_ipv4.address }}:{{ minio_start_port|int + index + 1 }}"
MINIO_ACCESS_KEY="{{ lookup('password', '' + minio_cluster + item + ':accessKey length=20 chars=ascii_letters,digits')|upper }}"
MINIO_SECRET_KEY="{{ lookup('password', '' + minio_cluster + item + ':secretKey length=40 chars=ascii_letters,digits') }}"
MINIO_BROWSER={{ minio_arg.webui }}
MINIO_DRIVE_SYNC={{ minio_arg.drive_sync }}
MINIO_COMPRESS="{{ minio_arg.compress_enabled }}"
MINIO_COMPRESS_EXTENSIONS=".{{ minio_arg.compress_extensions | join(',.') }}"
MINIO_COMPRESS_MIMETYPES="{{ minio_arg.compress_mime_types | join(',') }}"
{% if minio_arg.cache | bool %}
MINIO_CACHE="on"
MINIO_CACHE_DRIVES="{{ minio_path }}/cache/minio/T_{{ item }}"
MINIO_CACHE_EXPIRY={{ minio_arg.cache_expiry }}
MINIO_CACHE_EXCLUDE="{{ minio_arg.cache_exclude }}"
MINIO_CACHE_QUOTA={{ minio_arg.cache_quota }}
{% endif %}

{% if minio_noti_arg is defined and minio_noti_arg.type == "elasticsearch" %}
MINIO_NOTIFY_ELASTICSEARCH_ENABLE="on"
MINIO_NOTIFY_ELASTICSEARCH_URL="{{ minio_noti_arg.notification.url }}"
MINIO_NOTIFY_ELASTICSEARCH_INDEX="{{ minio_noti_arg.notification.index }}"
MINIO_NOTIFY_ELASTICSEARCH_FORMAT="{{ minio_noti_arg.notification.format }}"
MINIO_NOTIFY_ELASTICSEARCH_QUEUE_DIR="{{ minio_path }}/minio/T_{{ item }}/events"
MINIO_NOTIFY_ELASTICSEARCH_QUEUE_LIMIT="{{ minio_noti_arg.notification.queue_limit }}"
MINIO_NOTIFY_ELASTICSEARCH_USERNAME="{{ minio_noti_arg.notification.username }}"
MINIO_NOTIFY_ELASTICSEARCH_PASSWORD="{{ minio_noti_arg.notification.password }}"
{% endif %}